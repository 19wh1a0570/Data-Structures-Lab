	int data;
	struct BST*left,*right;
}node;
struct BST* root=NULL,*temp,*cur;
void create()
{
	temp=root;
	cur=(struct BST*)malloc(sizeof(struct BST));
	printf("\n enter data: \n");
	scanf("%d",&cur->data);
	cur->left=NULL;
	cur->right=NULL;
	if(temp==NULL)
		root=cur;
	else
	{
		while(temp!=NULL)
		{
			if((cur->data)<(temp->data))
			{
				if(temp->left==NULL)
				{
					temp->left=cur;
					return;
				}
				else
					temp=temp->left;
			}
			else
			{
				if(temp->right==NULL)
				{
					temp->right=cur;
					return;
				}
					temp=temp->right;
			}
		}
	}
}
void postorder(struct BST*temp)
{
	if(temp!=NULL)
	{
		postorder(temp->left);
		postorder(temp->right);
		printf("\t%d",temp->data);
	}
}
void inorder(struct BST*temp)
{
	if(temp!=NULL)
	{
		inorder(temp->left);
		printf("\t%d",temp->data);
		inorder(temp->right);
		
	}
}
void preorder(struct BST*temp)
{
	if(temp!=NULL)
	{
		printf("\t%d",temp->data);
		preorder(temp->left);
		preorder(temp->right);
		
	}
}
int main()
{
	int ch;
	while(1)
	{
		printf("\n\n");
	    printf("PROGRAM FOR BST:\n");
		printf("1. create\n");
		printf("2. preorder\n");
		printf("3. inorder\n");
		printf("4. postorder\n");
		printf("5.exit\n");
		printf("ENTER YOUR CHOICE:\n");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:create();
			       break;
			case 2:printf("preorder traversal\n");
			       preorder(root);
			       break;
			case 3:printf("inorder traversal\n");
			       inorder(root);
			       break;
			case 4:printf("postorder traversal\n");
			       postorder(root);
			       break;
			
			case 5:exit(0);
			default:printf("invalid choice\n");
		}
	}
}



C:\TDM-GCC-64\dslab>gcc binary_search_tree.c -o binary

C:\TDM-GCC-64\dslab>binary


PROGRAM FOR BST:
1. create
2. preorder
3. inorder
4. postorder
5.exit
ENTER YOUR CHOICE:
1

 enter data:
12


PROGRAM FOR BST:
1. create
2. preorder
3. inorder
4. postorder
5.exit
ENTER YOUR CHOICE:
1

 enter data:
13


PROGRAM FOR BST:
1. create
2. preorder
3. inorder
4. postorder
5.exit
ENTER YOUR CHOICE:
1

 enter data:
14


PROGRAM FOR BST:
1. create
2. preorder
3. inorder
4. postorder
5.exit
ENTER YOUR CHOICE:
1

 enter data:
15


PROGRAM FOR BST:
1. create
2. preorder
3. inorder
4. postorder
5.exit
ENTER YOUR CHOICE:
3
inorder traversal
        12      13      14      15

PROGRAM FOR BST:
1. create
2. preorder
3. inorder
4. postorder
5.exit
ENTER YOUR CHOICE:
2
preorder traversal
        12      13      14      15

PROGRAM FOR BST:
1. create
2. preorder
3. inorder
4. postorder
5.exit
ENTER YOUR CHOICE:
4
postorder traversal
        15      14      13      12

PROGRAM FOR BST:
1. create
2. preorder
3. inorder
4. postorder
5.exit
ENTER YOUR CHOICE:
5
